# quartzapp

###
# @name sequrity::autoTokenByPassword
POST http://localhost:8080/api/v1/auth/token?
    grant_type=password
Content-Type: application/json

{
  "loginId": "admin",
  "password": "password"
}

> {%
    if(undefined !== response.body.accessToken) client.global.set("accessToken", response.body.accessToken);
    if(undefined !== response.body.refreshToken) client.global.set("refreshToken", response.body.refreshToken);
%}

###
# @name sequrity::autoTokenByRefreshToken
< {%
    let refreshToken = client.global.get("refreshToken")
    if(refreshToken == undefined) refreshToken = ''
    client.global.set("refreshToken", refreshToken)
%}
POST http://localhost:8080/api/v1/auth/token?
    grant_type=refresh_token
Content-Type: application/json

{
  "loginId": "admin",
  "refreshToken": "{{refreshToken}}"
}

> {%
    if(undefined !== response.body.accessToken) client.global.set("accessToken", response.body.accessToken);
    if(undefined !== response.body.refreshToken) client.global.set("refreshToken", response.body.refreshToken);
%}

###
# @name scheduler::getJobStatus
//< {%
    // TODO: Pre-request 핸들러를 여기에 추가할 수 있습니다
//%}
GET http://localhost:8080/api/v1/scheduler/job
Authorization: Bearer {{accessToken}}
#Authorization: Bearer {{token}}

###
# @name scheduler::addJob
POST http://localhost:8080/api/v1/scheduler/job
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "name": "J001",
  "jobClassName": "com.home.quartzapp.quartzjobs.common.CommandJob",
  "jobDataMap": {
    "cwd": "C:\\",
    "command": "dir /w",
    "outputToLog": true,
    "charsetName": "EUC-KR"
  },
  "triggers": [
    {
      "name": "Job01-Trigger01",
      "cronExpression": "0 0/4 * ? * *"
    }
  ]
}

###
# @name scheduler::updatgeJob
PUT http://localhost:8080/api/v1/scheduler/job
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "name": "J001",
  "jobClassName": "com.home.quartzapp.quartzjobs.common.CommandJob",
  "jobDataMap": {
    "cwd": "C:\\",
    "command": "dir /w",
    "outputToLog": true,
    "charsetName": "EUC-KR"
  },
  "triggers": [
    {
      "name": "Job01-Trigger01",
      "cronExpression": "0 0/5 * ? * *"
    }
  ]
}

###
# @name scheduler::getJobStatus
//< {%
    // TODO: Pre-request 핸들러를 여기에 추가할 수 있습니다
//%}
GET http://localhost:8080/api/v1/scheduler/job?
    name=J001
Authorization: Bearer {{accessToken}}


###
# @name scheduler::commandJob:pause
PATCH http://localhost:8080/api/v1/scheduler/job?
    command=pause&name=J001
Authorization: Bearer {{accessToken}}

###
# @name scheduler::commandJob:resume
PATCH http://localhost:8080/api/v1/scheduler/job?
    command=resume&name=J001
Authorization: Bearer {{accessToken}}

###
# @name scheduler::commandJob:interrupt
PATCH http://localhost:8080/api/v1/scheduler/job?
    command=interrupt&name=J001
Authorization: Bearer {{accessToken}}

###
# @name scheduler::commandJob:execute
PATCH http://localhost:8080/api/v1/scheduler/job?
    command=execute&name=J001
Authorization: Bearer {{accessToken}}

###
# @name scheduler::deleteJob
DELETE http://localhost:8080/api/v1/scheduler/job
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "name": "J001"
}

